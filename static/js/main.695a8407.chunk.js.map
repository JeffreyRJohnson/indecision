{"version":3,"sources":["components/AddOption.js","components/Action.js","components/Header.js","components/Option.js","components/Options.js","components/OptionModal.js","components/IndecisionApp.js","App.js","serviceWorker.js","index.js"],"names":["AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","elements","value","trim","_this","props","setState","react_default","a","createElement","this","className","onSubmit","type","name","React","Component","Action","onClick","handlePick","disabled","hasOptions","Header","title","subtitle","defaultProps","Option","count","optionText","handleDeleteOption","Options","handleDeleteOptions","options","length","map","index","components_Option","key","OptionModal","lib_default","isOpen","selectedOption","onRequestClose","handleClearSelectedOption","contentLabel","closeTimeoutMS","IndecisionApp","optionToRemove","prevState","filter","randomNum","Math","floor","random","indexOf","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","console","log","components_Header","components_Action","components_Options","AddOption_AddOption","components_OptionModal","App","IndecisionApp_IndecisionApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.695a8407.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AddOption extends React.Component {\n  state = {\n    error: undefined\n  };\n\n  handleAddOption = e => {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.state.error && (\n          <p className=\"add-option__error\">{this.state.error}</p>\n        )}\n        <form onSubmit={this.handleAddOption} className=\"add-option\">\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" />\n          <button className=\"button\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Action = props => (\n  <div>\n    <button\n      onClick={props.handlePick}\n      disabled={!props.hasOptions}\n      className=\"big-button\"\n    >\n      What Should I do?\n    </button>\n  </div>\n);\n\nexport default Action;\n","import React from 'react';\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"container\">\n      <h1 className=\"header__title\">{props.title}</h1>\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\n    </div>\n  </div>\n);\n\nHeader.defaultProps = {\n  title: 'Indecision'\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Option = props => (\n  <div className=\"option\">\n    <p className=\"option__text\">\n      {props.count}. {props.optionText}\n    </p>\n\n    <button\n      onClick={e => {\n        props.handleDeleteOption(props.optionText);\n      }}\n      className=\"button button--link\"\n    >\n      remove\n    </button>\n  </div>\n);\n\nexport default Option;\n","import React from 'react';\nimport Option from '../components/Option';\n\nconst Options = props => (\n  <div>\n    <div className=\"widget__header\">\n      <h3 className=\"widget__header__title\">Your Options</h3>\n      <button\n        onClick={props.handleDeleteOptions}\n        className=\"button button--link\"\n      >\n        Remove All\n      </button>\n    </div>\n\n    {props.options.length === 0 && (\n      <p className=\"widget__message\">Please add an option to get started!</p>\n    )}\n\n    {props.options.map((option, index) => (\n      <Option\n        key={option}\n        optionText={option}\n        count={index + 1}\n        handleDeleteOption={props.handleDeleteOption}\n      />\n    ))}\n  </div>\n);\n\nexport default Options;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst OptionModal = props => (\n  <Modal\n    isOpen={!!props.selectedOption}\n    onRequestClose={props.handleClearSelectedOption}\n    contentLabel=\"Selected Option\"\n    closeTimeoutMS={200}\n    className=\"modal\"\n  >\n    <h3 className=\"modal__title\">Selected Option</h3>\n    {props.selectedOption && (\n      <p className=\"modal__body\">{props.selectedOption}</p>\n    )}\n    <button className=\"button\" onClick={props.handleClearSelectedOption}>\n      Okay\n    </button>\n  </Modal>\n);\n\nexport default OptionModal;\n","import React from 'react';\nimport AddOption from './AddOption';\nimport Action from './Action';\nimport Header from './Header';\nimport Options from './Options';\nimport OptionModal from './OptionModal';\n\nexport default class IndecisionApp extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined\n  };\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  };\n  handleClearSelectedOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  };\n  handleDeleteOption = optionToRemove => {\n    this.setState(prevState => ({\n      options: prevState.options.filter(option => optionToRemove !== option)\n    }));\n  };\n  handlePick = () => {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    this.setState(() => ({\n      selectedOption: option\n    }));\n  };\n  handleAddOption = option => {\n    if (!option) {\n      return 'Enter valid value to add item';\n    } else if (this.state.options.indexOf(option) > -1) {\n      return 'This option already exists';\n    }\n\n    this.setState(prevState => ({\n      options: prevState.options.concat(option)\n    }));\n  };\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('options');\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem('options', json);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  render() {\n    const subtitle = 'Put your life in the hands of a computer';\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={this.state.options.length > 0}\n            handlePick={this.handlePick}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption handleAddOption={this.handleAddOption} />\n          </div>\n        </div>\n\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          handleClearSelectedOption={this.handleClearSelectedOption}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport IndecisionApp from './components/IndecisionApp';\nimport './styles/styles.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <IndecisionApp />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}